#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This is joint configuration file for both the server and the data probes. Note that
# server and probe configuration can be placed into separate files - each file containing only
# 'nlpcraft.server' or 'nlpcraft.probe' sub-sections.
#
# You can also provide configuration properties or override the default ones via environment variables.
# To use environment variables override:
# 1. Set probe or server JVM system property -Dconfig.override_with_env_vars=true
# 2. For each configuration 'x.y.z' set the environment variable CONFIG_FORCE_x_y_z=some_value
#
# Examples of environment variables:
#   -- Overrides 'nlpcraft.sever.host' configuration property.
#   CONFIG_FORCE_nlpcraft_server_rest_host="localhost"
#
#   -- Overrides 'nlpcraft.sever.models' configuration property.
#   CONFIG_FORCE_nlpcraft_server_models="com.models.MyModel"
#
# See https://nlpcraft.apache.org/server-and-probe.html for more details.
#

# Common server/probe configuration root.
nlpcraft {
    # Basic NLP toolkit to use on both server and probes. Possible values:
    # - 'opennlp'
    # - 'stanford'
    #
    # NOTE: Stanford CoreNLP requires special installation due to its licensing.
    # See https://nlpcraft.apache.org/integrations.html#stanford for more details.
    nlpEngine = "opennlp"

    # External configuration resources.
    #
    # NOTE:
    # ----
    # Due to licensing restrictions of the official ASF release policy some of the
    # configuration for NLPCraft cannot be shipped with the official Apache release.
    # Instead, NLPCraft will attempt to download these configuration files from the
    # external URL upon the first start.
    #
    # NLPCraft will attempt to download the missing configuration files from URL defined
    # in 'nlpcraft.extConfig.extUrl' property and place them into 'nlpcraft.extConfig.locDir'
    # folder on the local file system. On subsequent starts, NLPCraft will check if the required
    # file is already present locally and skip the download in such case. If 'nlpcraft.extConfig.checkMd5'
    # property is set to 'true' then on each start NLPCraft will check the checksum of each file
    # locally and remote and will re-download such file if the MD5 checksums don't match.
    #
    # By default, the external configuration is stored in the main Git repository for NLPCraft
    # project from where it will be downloaded ('/external' folder). See this folder in the Git
    # repository for more information: https://github.com/apache/incubator-nlpcraft/raw/external_config/external
    extConfig {
        # Mandatory.
        extUrl = "https://github.com/apache/incubator-nlpcraft/raw/external_config/external"

        # Optional.
        # Default value is $USER_HOME/.nlpcraft/extcfg
        # locDir = ...

        # If 'true', on each start NLPCraft will check the MD5 checksum of the each local and remote
        # external configuration file and will re-download such file if the checksum doesn't match.
        # Set it to 'false' to speed up the bootstrap of the NLPCraft server and the data probe if you
        # are certain that all external configuration files are properly downloaded and available
        # in 'nlpcraft.extConfig.locDir' local folder.
        checkMd5 = true
    }

    # +---------------------+
    # | Probe configuration. |
    # +---------------------+
    probe {
        # Any arbitrary descriptive name.
        id = "cargps"

        # This is the default token (as in default company).
        # Note that this token must match the probe token for the company this probe
        # associated with. If changed from default, this token must be kept secure.
        token = "3141592653589793"

        # These are default up-link and down-link endpoints that the probe will connect to.
        # If changed - they need to be changed on both server and probe.
        upLink = "0.0.0.0:8201"   # Server to probe data pipe.
        downLink = "0.0.0.0:8202" # Probe to server data pipe.

        # All JARs in this folder will be scanned for models.
        # Safely ignored if 'null' - but then 'models' should have at least one element.
        jarsFolder = null

        # Specifies fully qualifies model class names for the probe to start with.
        #
        # Note that following models require 'google' on the server side.
        # See https://nlpcraft.apache.org/integrations.html#nlp for more details
        # on how to configure 3rd party token providers:
        models = org.apache.nlpcraft.examples.cargps.CarGpsModel

        # Specify class names for probe life cycle components.
        # Each class should extend 'NCProbeLifecycle' interface and provide a no-arg constructor.
        #
        # The following built-in OpenCensus exporters are supported as lifecycle components:
        # - org.apache.nlpcraft.model.opencensus.NCJaegerExporter (traces)
        # - org.apache.nlpcraft.model.opencensus.NCZipkinExporter (traces)
        # - org.apache.nlpcraft.model.opencensus.NCPrometheusExporter (stats)
        # - org.apache.nlpcraft.model.opencensus.NCStackdriverTraceExporter (traces)
        # - org.apache.nlpcraft.model.opencensus.NCStackdriverStatsExporter (stats)
        lifecycle = ""

        # Properties for built-in OpenCensus exporters.
        # All configuration properties are optional unless otherwise specified.
        # opencensus {
        #     jaeger {
        #         thriftUrl = "http://127.0.0.1:14268/api/traces"
        #         serviceName = "nlpcraft-probe"
        #     }
        #     prometheus {
        #         hostPort = "localhost:8889"
        #         namespace = "nlpcraft-probe"
        #     }
        #     stackdriver {
        #         # Mandatory Google project ID.
        #         googleProjectId = "your_google_project_id"
        #         metricsPrefix = "custom.googleapis.com/nlpcraft/probe"
        #     }
        #     zipkin {
        #         v2Url = "http://127.0.0.1:9411/api/v2/spans"
        #         serviceName = "nlpcraft-probe"
        #     }
        # }

        # Maximum execution result size in bytes. Default value is 1M.
        # When exceeded the request will be automatically rejected.
        resultMaxSizeBytes = 1048576
    }
}
